name: "Patch flat export: SI timestamp + single-key joins"
steps:
  # Secure keychain-backed connection (no secrets in code)
  - include: bruno-keychain-conn.yml

  - write: sql/migrations/2025-09-25_v_flat_export_sheet_si_time.sql
    content: |
      /* v_flat_export_sheet â€” single-key joins on canonical_tx_id
         Time/Daypart/Weektype derived from SalesInteractions.TransactionDate (fallback to base) */
      CREATE OR ALTER VIEW dbo.v_flat_export_sheet AS
      WITH base AS (
        SELECT
          CAST(p.canonical_tx_id AS varchar(64))   AS Transaction_ID,
          CAST(p.total_amount AS decimal(18,2))    AS Transaction_Value,
          CAST(p.total_items  AS int)              AS Basket_Size,
          p.category                                AS Category,
          p.brand                                   AS Brand,
          p.txn_ts                                  AS base_txn_ts,
          p.daypart                                 AS base_daypart,
          p.weekday_weekend                         AS base_weektype,
          p.store_name                               AS Location
        FROM dbo.v_transactions_flat_production p
        -- Optional business toggle:
        -- WHERE p.is_completed = 1
      ),
      demo AS (
        /* Aggregate per transaction to one SI row */
        SELECT
          si.canonical_tx_id,
          MAX(si.TransactionDate)    AS si_txn_ts,
          MAX(CASE
            WHEN si.Age BETWEEN 18 AND 24 THEN '18-24'
            WHEN si.Age BETWEEN 25 AND 34 THEN '25-34'
            WHEN si.Age BETWEEN 35 AND 44 THEN '35-44'
            WHEN si.Age BETWEEN 45 AND 54 THEN '45-54'
            WHEN si.Age BETWEEN 55 AND 64 THEN '55-64'
            WHEN si.Age >= 65 THEN '65+'
            ELSE ''
          END) AS age_bracket,
          MAX(si.Gender)             AS gender,
          MAX(si.EmotionalState)     AS customer_type
        FROM dbo.SalesInteractions si
        WHERE si.canonical_tx_id IS NOT NULL
        GROUP BY si.canonical_tx_id
      ),
      personas AS (
        SELECT
          pr.canonical_tx_id,
          MAX(pr.role) AS inferred_role
        FROM ref.v_persona_inference pr
        WHERE pr.canonical_tx_id IS NOT NULL
        GROUP BY pr.canonical_tx_id
      ),
      subs AS (
        SELECT
          v.sessionId AS canonical_tx_id,
          MAX(CASE WHEN v.substitution_event = '1' THEN 1 ELSE 0 END) AS was_substitution
        FROM dbo.v_insight_base v
        WHERE v.sessionId IS NOT NULL
        GROUP BY v.sessionId
      )
      SELECT
        b.Transaction_ID,
        b.Transaction_Value,
        b.Basket_Size,
        b.Category,
        b.Brand,

        /* Daypart: prefer SI time */
        COALESCE(
          CASE
            WHEN d.si_txn_ts IS NULL THEN NULL
            WHEN DATEPART(HOUR, d.si_txn_ts) BETWEEN 5 AND 11 THEN 'Morning'
            WHEN DATEPART(HOUR, d.si_txn_ts) BETWEEN 12 AND 17 THEN 'Afternoon'
            WHEN DATEPART(HOUR, d.si_txn_ts) BETWEEN 18 AND 22 THEN 'Evening'
            ELSE 'Night'
          END,
          b.base_daypart
        ) AS Daypart,

        /* Demographics with persona inference: Age Gender Role */
        LTRIM(RTRIM(
          CONCAT(
            COALESCE(d.age_bracket,''),
            CASE WHEN COALESCE(d.gender,'') != '' THEN ' ' + d.gender ELSE '' END,
            CASE WHEN COALESCE(p.inferred_role,'') != '' AND COALESCE(p.inferred_role,'') != 'Regular'
                 THEN ' ' + p.inferred_role
                 WHEN COALESCE(d.customer_type,'') != '' THEN ' ' + d.customer_type
                 ELSE '' END
          )
        )) AS [Demographics (Age/Gender/Role)],

        /* Weekday/Weekend: prefer SI time */
        COALESCE(
          CASE WHEN d.si_txn_ts IS NULL THEN NULL
               WHEN DATENAME(WEEKDAY, d.si_txn_ts) IN ('Saturday','Sunday') THEN 'Weekend'
               ELSE 'Weekday'
          END,
          b.base_weektype
        ) AS Weekday_vs_Weekend,

        /* Time of transaction: prefer SI time */
        FORMAT(COALESCE(d.si_txn_ts, b.base_txn_ts), 'htt', 'en-US') AS [Time of transaction],

        b.Location,

        /* Co-purchases: by tx id; exclude primary brand/category */
        (
          SELECT STRING_AGG(
                   CASE
                     WHEN ti2.brand IS NOT NULL AND ti2.category IS NOT NULL THEN CONCAT(ti2.brand, ' (', ti2.category, ')')
                     WHEN ti2.brand IS NOT NULL THEN ti2.brand
                     WHEN ti2.category IS NOT NULL THEN ti2.category
                     ELSE ti2.product_name
                   END, ', '
                 )
          FROM dbo.TransactionItems ti2
          WHERE ti2.canonical_tx_id = b.Transaction_ID
            AND (
                  ti2.brand IS NULL
                  OR UPPER(LTRIM(RTRIM(ti2.brand))) <> UPPER(LTRIM(RTRIM(b.Brand)))
                )
            AND (
                  ti2.category IS NULL
                  OR UPPER(LTRIM(RTRIM(ti2.category))) <> UPPER(LTRIM(RTRIM(b.Category)))
                )
        ) AS Other_Products,

        CASE
          WHEN s.was_substitution = 1 THEN 'true'
          WHEN s.was_substitution = 0 THEN 'false'
          ELSE ''
        END AS Was_Substitution

      FROM base b
      LEFT JOIN demo d ON d.canonical_tx_id = b.Transaction_ID
      LEFT JOIN personas p ON p.canonical_tx_id = b.Transaction_ID
      LEFT JOIN subs s ON s.canonical_tx_id  = b.Transaction_ID;
      GO

      -- Permissions (adjust role if needed)
      IF EXISTS (SELECT 1 FROM sys.database_principals WHERE name = 'rpt_reader')
        GRANT SELECT ON dbo.v_flat_export_sheet TO rpt_reader;
      GO

  - run: |
      set -e
      # Production database validation gate
      sqlcmd -S "$AZURE_SQL_CONN_STR" -i sql/validation/production_gate.sql

      # Apply the single-key JOIN migration
      sqlcmd -S "$AZURE_SQL_CONN_STR" -i sql/migrations/2025-09-25_v_flat_export_sheet_si_time.sql

      # Re-run hard gates (coverage and column contract validation)
      sqlcmd -S "$AZURE_SQL_CONN_STR" -i sql/validation/coverage_checks.sql -s "," -W -h -1 > out/coverage_checks.csv
      sqlcmd -S "$AZURE_SQL_CONN_STR" -i sql/validation/codebook_flat_export.sql -s "," -W -h -1 > out/codebook_flat_export.csv
    shell: bash

  - run: |
      set -e
      python3 scripts/extract_flat_dataframe.py --out out/flat_dataframe.csv
    shell: bash