# Prometheus Configuration for Scout Analytics ETL
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    environment: 'scout-analytics'
    region: 'ap-southeast-1'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Scout ETL Pipeline Metrics
  - job_name: 'scout-etl-pipeline'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['bruno-worker:8080']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'scout_.*'
        action: keep

  # Temporal Workflow Engine
  - job_name: 'temporal-server'
    scrape_interval: 30s
    static_configs:
      - targets: ['temporal:7233']
    metrics_path: '/metrics'

  # OpenTelemetry Collector
  - job_name: 'otel-collector'
    scrape_interval: 30s
    static_configs:
      - targets: ['otel-collector:8888']

  # PostgreSQL Database Metrics (via postgres_exporter)
  - job_name: 'postgres-supabase'
    scrape_interval: 60s
    static_configs:
      - targets: ['aws-0-ap-southeast-1.pooler.supabase.com:6543']
    metrics_path: '/metrics'
    params:
      target: ['postgres://postgres.cxzllzyxwpyptfretryc@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres']

  # dbt Model Execution Metrics
  - job_name: 'dbt-models'
    scrape_interval: 120s
    static_configs:
      - targets: ['bruno-worker:8081']
    metrics_path: '/dbt/metrics'

  # Data Quality Metrics (Great Expectations)
  - job_name: 'data-quality'
    scrape_interval: 300s  # 5 minutes
    static_configs:
      - targets: ['bruno-worker:8082']
    metrics_path: '/quality/metrics'

  # System Resource Monitoring
  - job_name: 'node-exporter'
    scrape_interval: 15s
    static_configs:
      - targets: ['localhost:9100']

# Remote write configuration for long-term storage
remote_write:
  - url: "${PROMETHEUS_REMOTE_WRITE_ENDPOINT}"
    headers:
      Authorization: "Bearer ${PROMETHEUS_API_KEY}"
    queue_config:
      max_samples_per_send: 1000
      batch_send_deadline: 5s