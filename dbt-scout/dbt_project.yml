# dbt Project Configuration for Scout Analytics
# Production-grade Silver/Gold/Platinum transformations

name: 'scout_analytics'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'scout_analytics'

# These configurations specify where dbt should look for different types of files.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"

# Configuring models
models:
  scout_analytics:
    # Config for all models in the scout_analytics project
    +materialized: table
    +on_schema_change: "fail"
    
    staging:
      # Config for staging models
      +materialized: view
      +tags: ["staging"]
      
    bronze:
      # Config for bronze layer (raw ingestion)
      +materialized: incremental
      +on_schema_change: "append_new_columns"
      +tags: ["bronze", "raw"]
      +schema: bronze
      
    silver:
      # Config for silver layer (cleansed, standardized)
      +materialized: incremental
      +unique_key: "id"
      +on_schema_change: "fail"
      +tags: ["silver", "cleaned"]
      +schema: silver
      +pre-hook: "{{ log('Starting Silver transformation: ' ~ this, info=true) }}"
      +post-hook: 
        - "{{ log('Completed Silver transformation: ' ~ this, info=true) }}"
        - "INSERT INTO metadata.quality_metrics (dataset, layer, metric_name, metric_value, dimension, job_run_id) VALUES ('{{ this }}', 'silver', 'row_count', (SELECT COUNT(*) FROM {{ this }}), 'completeness', '{{ var(\"job_run_id\", null) }}'::UUID)"
        
    gold:
      # Config for gold layer (business-ready analytics)
      +materialized: table
      +tags: ["gold", "analytics"]
      +schema: gold
      +pre-hook: "{{ log('Starting Gold transformation: ' ~ this, info=true) }}"
      +post-hook:
        - "{{ log('Completed Gold transformation: ' ~ this, info=true) }}"
        - "INSERT INTO metadata.quality_metrics (dataset, layer, metric_name, metric_value, dimension, job_run_id) VALUES ('{{ this }}', 'gold', 'row_count', (SELECT COUNT(*) FROM {{ this }}), 'completeness', '{{ var(\"job_run_id\", null) }}'::UUID)"
        
    platinum:
      # Config for platinum layer (ML features, predictions)
      +materialized: table
      +tags: ["platinum", "ml", "features"]
      +schema: platinum
      +pre-hook: "{{ log('Starting Platinum transformation: ' ~ this, info=true) }}"
      +post-hook:
        - "{{ log('Completed Platinum transformation: ' ~ this, info=true) }}"
        - "INSERT INTO metadata.quality_metrics (dataset, layer, metric_name, metric_value, dimension, job_run_id) VALUES ('{{ this }}', 'platinum', 'row_count', (SELECT COUNT(*) FROM {{ this }}), 'completeness', '{{ var(\"job_run_id\", null) }}'::UUID)"

# Snapshot configurations
snapshots:
  scout_analytics:
    +target_schema: snapshots
    +strategy: timestamp
    +updated_at: updated_at

# Seed configurations
seeds:
  scout_analytics:
    +schema: seeds
    +tags: ["seeds"]

# Test configurations
tests:
  +store_failures: true
  +schema: test_failures

# Variables
vars:
  # Date variables for incremental processing
  start_date: '2024-01-01'
  end_date: '2025-12-31'
  
  # Quality thresholds
  max_null_percentage: 0.05
  min_row_count: 100
  
  # SLA configurations
  bronze_sla_minutes: 15
  silver_sla_minutes: 30
  gold_sla_minutes: 60
  
  # PII masking
  enable_pii_masking: true
  
  # Incremental strategy
  incremental_strategy: 'merge'
  
  # OpenLineage integration
  emit_lineage_events: true

# Packages
packages:
  - package: dbt-labs/dbt_utils
    version: 1.1.1
  - package: calogica/dbt_expectations
    version: 0.9.0
  - package: dbt-labs/audit_helper
    version: 0.9.0

# Macros for data quality
on-run-start:
  - "{{ log('Starting dbt run with job_run_id: ' ~ var('job_run_id', 'unknown'), info=true) }}"
  - "{% if var('emit_lineage_events', false) %}{{ emit_lineage_start() }}{% endif %}"

on-run-end:
  - "{{ log('Completed dbt run with job_run_id: ' ~ var('job_run_id', 'unknown'), info=true) }}"
  - "{% if var('emit_lineage_events', false) %}{{ emit_lineage_complete() }}{% endif %}"

# Dispatch configuration for package compatibility
dispatch:
  - macro_namespace: dbt_utils
    search_order: ['scout_analytics', 'dbt_utils']